{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/anibal/Desktop/task-app/pages/index.js\";\nimport Head from 'next/head';\nimport React, { useState } from 'react';\nimport fetch from 'isomorphic-unfetch';\nexport default function Home(props) {\n  console.log(props.movie);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.movie.map(movies => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: movies.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 71\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movies.Type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 96\n        }, this)]\n      }, movies.imdbID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 46\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n}\n\nHome.getInitialProps = async () => {\n  const res = await fetch('http://www.omdbapi.com/?apikey=ace993e9&s=mr%20robot');\n  const {\n    Search\n  } = await res.json();\n\n  if (Search) {\n    setState(true);\n  } else {\n    setState(false);\n  }\n\n  return {\n    movie: Search\n  };\n};","map":{"version":3,"sources":["/home/anibal/Desktop/task-app/pages/index.js"],"names":["Head","React","useState","fetch","Home","props","console","log","movie","map","movies","Title","Type","imdbID","getInitialProps","res","Search","json","setState"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAIA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;AAEA,sBACI;AAAA,cAAMH,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgBC,MAAM,IAAG;AAAC,0BAAO;AAAA,gCAAyB;AAAA,oBAAMA,MAAM,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAzB,oBAAkD;AAAA,oBAAID,MAAM,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,gBAAlD;AAAA,SAAUF,MAAM,CAACG,MAAjB;AAAA;AAAA;AAAA;AAAA,cAAP;AAAqF,KAA/G;AAAN;AAAA;AAAA;AAAA;AAAA,UADJ;AAGD;;AAEDT,IAAI,CAACU,eAAL,GAAuB,YAAW;AAC1B,QAAMC,GAAG,GAAI,MAAMZ,KAAK,CAAC,sDAAD,CAAxB;AACA,QAAM;AAACa,IAAAA;AAAD,MAAW,MAAMD,GAAG,CAACE,IAAJ,EAAvB;;AACA,MAAID,MAAJ,EAAY;AACVE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;;AACD,SAAM;AAACV,IAAAA,KAAK,EAAEQ;AAAR,GAAN;AACP,CATD","sourcesContent":["import Head from 'next/head'\nimport React, {useState} from 'react'\nimport fetch from 'isomorphic-unfetch'\n\n\n\nexport default function Home(props) {\n  console.log(props.movie)\n\n  return (\n      <div>{props.movie.map(movies =>{return(<div key={movies.imdbID}><h1 >{movies.Title}</h1> <p>{movies.Type}</p></div>)})}</div>\n  )\n}\n\nHome.getInitialProps = async () =>{\n        const res  = await fetch('http://www.omdbapi.com/?apikey=ace993e9&s=mr%20robot')\n        const {Search} = await res.json()\n        if (Search) {\n          setState(true)\n        } else {\n          setState(false)\n        }\n        return{movie: Search}\n}\n"]},"metadata":{},"sourceType":"module"}